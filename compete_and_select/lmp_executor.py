"""
Author: Michael Yoo Fatemi
Date: April 25, 2024
"""

import traceback

class StatefulLanguageModelProgramExecutor:

    def __init__(self, vars = None):
        self.vars_ptr = {'vars': {**(vars or {})}}

    def update(self, **vars):
        self.vars_ptr['vars'].update(vars)

    def check(self, source: str):
        # same checks as those made by voxposer
        assert 'import' not in source, "Cannot import any new libraries"
        assert '__' not in source, "Cannot use any special variables"
    
    def execute(self, source: str):
        self.check(source)

        globals_ = {'exec': None, 'eval': None, 'open': None}
        locals_ = {**self.vars_ptr['vars'], "__vars_ptr": self.vars_ptr}

        # capture changes made
        source += """
### AUTOGENERATED CODE TO CAPTURE LOCAL VARIABLES ###
__vars_ptr['vars'] = {k: v for (k, v) in locals().items() if '__' not in k}
"""
        try:
            exec(source, globals_, locals_)
            
            return (True, None)
        except Exception as e:
            error_str = traceback.format_exc()

            return (False, error_str)

def test():
    executor = StatefulLanguageModelProgramExecutor()

    res = executor.execute("a = 5")
    res = executor.execute("print(a)")
    res = executor.execute("v = []\nfor x in range(5):\n\tv.append(x)")
    res = executor.execute("print(v)")

if __name__ == '__main__':
    test()
